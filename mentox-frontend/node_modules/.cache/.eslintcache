[{"/home/vishal/Projects/MENTOX/mentox-frontend/src/index.js":"1","/home/vishal/Projects/MENTOX/mentox-frontend/src/App.js":"2","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/SignUp.js":"3","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/AboutUs.js":"4","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/ContactUs.js":"5","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Blog.js":"6","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Home/Home.js":"7","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Navbar.js":"8","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Footer.js":"9","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/HeroSection.js":"10","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Home/Content.js":"11","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Home/index.js":"12","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Dropdown.js":"13","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Button.js":"14","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/MenuItem.js":"15","/home/vishal/Projects/MENTOX/mentox-frontend/src/backend.js":"16","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/Group.js":"17","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/LoginForm.jsx":"18","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/ChatFeed.jsx":"19","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/MyMessage.jsx":"20","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/TheirMessage.jsx":"21","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/MessageForm.jsx":"22","/home/vishal/Projects/MENTOX/mentox-frontend/src/helper/authHelper.js":"23","/home/vishal/Projects/MENTOX/mentox-frontend/src/helper/formHelper.js":"24"},{"size":182,"mtime":1628861811181,"results":"25","hashOfConfig":"26"},{"size":1153,"mtime":1628956968114,"results":"27","hashOfConfig":"26"},{"size":5126,"mtime":1628963171862,"results":"28","hashOfConfig":"26"},{"size":1502,"mtime":1629000746780,"results":"29","hashOfConfig":"26"},{"size":252,"mtime":1628861811113,"results":"30","hashOfConfig":"26"},{"size":14065,"mtime":1628956968114,"results":"31","hashOfConfig":"26"},{"size":396,"mtime":1628956968114,"results":"32","hashOfConfig":"26"},{"size":2492,"mtime":1628956968114,"results":"33","hashOfConfig":"26"},{"size":3266,"mtime":1628861811113,"results":"34","hashOfConfig":"26"},{"size":807,"mtime":1628956968114,"results":"35","hashOfConfig":"26"},{"size":4312,"mtime":1628956968114,"results":"36","hashOfConfig":"26"},{"size":5388,"mtime":1628861811181,"results":"37","hashOfConfig":"26"},{"size":789,"mtime":1628842162579,"results":"38","hashOfConfig":"26"},{"size":291,"mtime":1628943851418,"results":"39","hashOfConfig":"26"},{"size":218,"mtime":1628956968114,"results":"40","hashOfConfig":"26"},{"size":50,"mtime":1628864695490,"results":"41","hashOfConfig":"26"},{"size":856,"mtime":1628956968118,"results":"42","hashOfConfig":"26"},{"size":6339,"mtime":1628960256493,"results":"43","hashOfConfig":"26"},{"size":1988,"mtime":1628943499900,"results":"44","hashOfConfig":"26"},{"size":528,"mtime":1628943499932,"results":"45","hashOfConfig":"26"},{"size":1017,"mtime":1628943499932,"results":"46","hashOfConfig":"26"},{"size":1445,"mtime":1628943499928,"results":"47","hashOfConfig":"26"},{"size":370,"mtime":1628957584805,"results":"48","hashOfConfig":"26"},{"size":369,"mtime":1628934290401,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1y87jh9",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/vishal/Projects/MENTOX/mentox-frontend/src/index.js",[],["101","102"],"/home/vishal/Projects/MENTOX/mentox-frontend/src/App.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/SignUp.js",["103"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Avatar, Button, Typography } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Link } from \"react-router-dom\";\nimport { Form } from \"../../helper/formHelper\";\nimport { Redirect } from \"react-router\";\n\nconst avatarStyle = { backgroundColor: \"#rgb777\" };\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"50vh\",\n    },\n  },\n  container: {\n    margin: \"15vh 20vh 20vh 20vh\",\n    width: \"auto\",\n    alignSelf: \"center\",\n    height: \"100%\",\n    padding: \"10px 30px 30px 30px\",\n    backgroundColor: \"#cec3db\",\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    name: \"\",\n    phone: \"\",\n    age: \"\",\n    address: \"\",\n    description: \"\",\n    health: \"\",\n    didRedirect: false,\n  });\n\n  const { email, name, phone, age, address, description, health } = values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values });\n    //Check if all fields are filled\n    if (email === \"\" || name === \"\" || age === \"\" || description === \"\") {\n      setValues({\n        ...values,\n      });\n    } else {\n      Form({ email, name, age, description, phone, address, health })\n        .then((data) => {\n          if (data) {\n            setValues({\n              ...values,\n              didRedirect: true,\n            });\n          } else {\n            setValues({ ...values });\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  //Performing redirect after successfull login\n  const performRedirect = () => {\n    if (values.didRedirect) {\n      return <Redirect to=\"/Group\" />;\n    }\n  };\n\n  return (\n    <div align=\"center\">\n      {performRedirect()}\n      <Paper className={classes.container} elevation={10}>\n        <Avatar style={(avatarStyle, { marginTop: \"10px\" })}>\n          <AccountCircleIcon />\n        </Avatar>\n        <h2 style={{ margin: \"10px 0 30px 0\" }}>Sign Up</h2>\n\n        <form\n          className={classes.root}\n          noValidate\n          autoComplete=\"off\"\n          align=\"center\"\n        >\n          <Grid lg={3}>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Full Name\"\n              variant=\"outlined\"\n              value={name}\n              onChange={handleChange(\"name\")}\n            />\n\n            <TextField\n              id=\"outlined-input\"\n              label=\"Email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              variant=\"outlined\"\n              required\n              value={email}\n              onChange={handleChange(\"email\")}\n            />\n            <TextField\n              id=\"outlined-number\"\n              label=\"Contact Number\"\n              type=\"numbers\"\n              variant=\"outlined\"\n              required\n              value={phone}\n              onChange={handleChange(\"phone\")}\n            />\n            <TextField\n              id=\"outlined-number\"\n              label=\"Enter your age\"\n              type=\"numbers\"\n              variant=\"outlined\"\n              required\n              value={age}\n              onChange={handleChange(\"age\")}\n            />\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Address\"\n              style={{ width: \"86vh\" }}\n              placeholder=\"Address\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              required\n              value={address}\n              onChange={handleChange(\"address\")}\n            />\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Describe your issue\"\n              style={{ marginTop: 20, width: \"86vh\" }}\n              placeholder=\"About your problem\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              required\n              value={description}\n              onChange={handleChange(\"description\")}\n            />\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Any previous medical issues\"\n              variant=\"outlined\"\n              value={health}\n              onChange={handleChange(\"health\")}\n            />\n          </Grid>\n          <Button\n            style={{ width: \"100%\", marginTop: \"20px\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSubmit}\n          >\n            Register\n          </Button>\n          <Typography style={{ marginTop: \"10px\" }}>\n            {\" \"}\n            Instead want to go back ? <Link to=\"/Home\">Home</Link>\n          </Typography>\n        </form>\n      </Paper>\n    </div>\n  );\n}\n","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/AboutUs.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/ContactUs.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Blog.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Home/Home.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Navbar.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Footer.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/HeroSection.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Home/Content.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Pages/Home/index.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Dropdown.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/Button.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/MenuItem.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/backend.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/Group.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/LoginForm.jsx",["104"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {\n  Grid,\n  Paper,\n  Avatar,\n  TextField,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { register } from \"../../../helper/authHelper\";\nimport { Redirect } from \"react-router\";\n\nconst projectID = \"439b20aa-7e65-4108-a931-ca50d084f14d\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport function SimpleModal() {\n  const paperStyle = {\n    padding: 20,\n    height: \"70vh\",\n    width: 480,\n    margin: \"50px auto\",\n  };\n\n  const avatarStyle = { backgroundColor: \"#rgb777\" };\n\n  const btnstyle = { margin: \"8px 0\" };\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    didRedirect: false,\n  });\n\n  const { username, password } = values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values });\n    //Check if all fields are filled\n    if (username === \"\" || password === \"\") {\n      setValues({\n        ...values,\n      });\n    } else {\n      register({ username, password })\n        .then((data) => {\n          if (data) {\n            setValues({\n              ...values,\n              didRedirect: true,\n            });\n          } else {\n            setValues({ ...values });\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  //Performing redirect after successfull login\n  const performRedirect = () => {\n    if (values.didRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div\n      style={(modalStyle, { width: \"auto\", top: \"7%\", left: \"30%\" })}\n      className={classes.paper}\n    >\n      <Grid>\n        <Paper elevation={10} style={paperStyle}>\n          <Grid align=\"center\">\n            <Avatar style={avatarStyle}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <br />\n            <h2>Create Account</h2>\n          </Grid>\n          <br />\n          <br />\n          <TextField\n            label=\"Username\"\n            placeholder=\"Enter username\"\n            type=\"text\"\n            fullWidth\n            value={username}\n            required\n            onChange={handleChange(\"username\")}\n          />\n          <br />\n          <TextField\n            label=\"Password\"\n            placeholder=\"Enter password\"\n            type=\"password\"\n            fullWidth\n            value={password}\n            required\n            onChange={handleChange(\"password\")}\n          />\n          <br />\n          <br />\n          <br />\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            style={btnstyle}\n            onClick={onSubmit}\n            fullWidth\n          >\n            Create Account\n          </Button>\n          <br />\n          <br />\n\n          <Typography align=\"center\">\n            {\" \"}\n            <span>Creation of account might take while to process</span>\n          </Typography>\n        </Paper>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <div>\n      {performRedirect()}\n      <div align=\"center\">\n        <button type=\"submit\" className=\"button\" onClick={handleOpen}>\n          <span>Create Account </span>\n        </button>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const authObject = {\n      \"Project-ID\": projectID,\n      \"User-Name\": username,\n      \"User-Secret\": password,\n    };\n\n    try {\n      await axios.get(\"https://api.chatengine.io/chats\", {\n        headers: authObject,\n      });\n\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"password\", password);\n\n      window.location.reload();\n      setError(\"\");\n    } catch (error) {\n      setError(\"Oops, incorrect credentials.\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"wrapper\">\n        <div className=\"form\">\n          <h1 className=\"title\">MENTOX Chat Application</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"input\"\n              placeholder=\"Username\"\n              required\n            />\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"input\"\n              placeholder=\"Password\"\n              required\n            />\n            <div align=\"center\">\n              <button type=\"submit\" className=\"button\">\n                <span>Chat/Interact for a better Mental Health </span>\n              </button>\n            </div>\n            <h2 className=\"error\">{error}</h2>\n          </form>\n          <h2 align=\"center\" style={{ color: \"white\" }}>\n            OR\n          </h2>\n          <SimpleModal />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/ChatFeed.jsx",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/MyMessage.jsx",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/TheirMessage.jsx",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/Components/group/GrpComponent/MessageForm.jsx",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/helper/authHelper.js",[],"/home/vishal/Projects/MENTOX/mentox-frontend/src/helper/formHelper.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":83,"column":36,"nodeType":"111","messageId":"112","endLine":83,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":114,"column":25,"nodeType":"111","messageId":"112","endLine":114,"endColumn":26},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]